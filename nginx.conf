server {
    # Nginx سيستمع على المنفذ 80، وهو المنفذ القياسي لبروتوكول HTTP.
    listen 80;
    # اسم الخادم الافتراضي داخل الحاوية.
    server_name localhost;

    # تفعيل ضغط gzip لتحسين الأداء
    gzip on;
    gzip_types text/plain text/css text/javascript application/javascript application/json;
    gzip_min_length 1000;
    gzip_vary on;

    # تعيين headers للتحكم في cache
    add_header Cache-Control "public, max-age=31536000" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # هذا البلوك يتعامل مع جميع الطلبات الواردة (/).
    location / {
        # يحدد Nginx أن الملفات التي سيخدمها موجودة في هذا المسار.
        root   /usr/share/nginx/html;
        # يحدد الملفات التي يجب أن يبحث عنها Nginx افتراضيًا عند طلب مجلد.
        index  index.html index.htm;
        
        # إعدادات cache للملفات الثابتة
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # هذا السطر هو الأهم لتطبيقات Flutter Web (SPA).
        # يضمن أن جميع الطلبات غير الموجودة تعود إلى index.html
        try_files $uri $uri/ /index.html;
    }

    # إعدادات خاصة للملفات الثابتة لتحسين الأداء
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        try_files $uri =404;
    }

    # عدم cache ملف index.html لضمان الحصول على أحدث إصدار
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri /index.html;
    }

    # التعامل مع صفحات الأخطاء (مثل 500 Server Error).
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}